worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events { worker_connections 1024; }

http {
  include       /etc/nginx/mime.types;   # .m3u8 -> application/vnd.apple.mpegurl, .ts -> video/mp2t
  default_type  application/octet-stream;
  sendfile      on; tcp_nopush on; tcp_nodelay on;
  keepalive_timeout 65;
  server_tokens off;

  # Caché de HLS
  proxy_cache_path /var/cache/nginx/hls keys_zone=HLS:10m max_size=1g inactive=24h use_temp_path=off;
  proxy_cache_lock on;
  proxy_cache_background_update on;

  upstream minio_s3 { server minio:9000; }

  server {
    listen 80 default_server;
    server_name _;
    # Serve static files if present (e.g., /var/www/hls/...)
    root /var/www;

    # CORS
    # add_header Access-Control-Allow-Origin * always;
    # add_header Access-Control-Allow-Methods "GET, POST, OPTIONS" always;
    # add_header Access-Control-Allow-Headers "*" always;

    # Salud
    location = /nginx-health { add_header Content-Type text/plain; return 200 'ok'; }

    # API backend (opcional, como en pasos previos)
    location /api/ {
      if ($request_method = OPTIONS) { return 204; }
      proxy_pass http://backend:3000/;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    # HLS proxy → MinIO  (mapea /hls/{id}/... a /vod/hls/{id}/...)
    location /hls/ {
      if ($request_method = OPTIONS) { return 204; }
      proxy_hide_header Access-Control-Allow-Origin;
      proxy_hide_header Access-Control-Allow-Credentials;
      proxy_hide_header Access-Control-Allow-Headers;
      proxy_hide_header Access-Control-Allow-Methods;

      add_header Access-Control-Allow-Origin "*" always;
      add_header Access-Control-Allow-Methods "GET, HEAD, OPTIONS" always;
      add_header Access-Control-Allow-Headers "Range, Origin, Accept, Referer, User-Agent" always;
      add_header Access-Control-Expose-Headers "Content-Length, Content-Range, Accept-Ranges" always;
      # Caché: segmentos largos, manifiestos cortos
      proxy_cache HLS;
      proxy_ignore_headers Set-Cookie;
      proxy_buffering on;
      proxy_request_buffering off;  # empieza a enviar lo que llega
      proxy_http_version 1.1;
      proxy_set_header Host minio:9000;            # evitar estilo virtual-host con localhost:8080
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Authorization "";          # no reenviar auth del cliente

      # TTLs por tipo (override del origen)
      location ~* \.m3u8$ {
        proxy_cache_valid 200 206 30s;  # manifest
        proxy_pass http://minio_s3/vod$uri;  # /hls/... -> /vod/hls/...
      }
      location ~* \.(ts|m4s)$ {
        proxy_cache_valid 200 206 24h;  # segmentos VOD
        proxy_pass http://minio_s3/vod$uri;
      }
      # fallback genérico
      try_files $uri @proxy_minio;
    }

    location @proxy_minio {
      proxy_set_header Host minio:9000;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Authorization "";
      proxy_pass http://minio_s3/vod$uri;
    }
  }
}
